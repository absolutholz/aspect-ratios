{"version":3,"sources":["utilities/events/event-debounce.js"],"names":["debounce","func","wait","immediate","timeout","args","context","later","apply","callNow","clearTimeout","setTimeout"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;AAaO,SAASA,QAAT,CAAkBC,IAAlB,EAAwBC,IAAxB,EAA8BC,SAA9B,EAAyC;AAAA;;AAC/C,MAAIC,OAAJ;AAEA,SAAO,YAAa;AAAA,sCAATC,IAAS;AAATA,MAAAA,IAAS;AAAA;;AACnB,QAAMC,OAAO,GAAG,KAAhB;;AACA,QAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AACnBH,MAAAA,OAAO,GAAG,IAAV;;AACA,UAAI,CAACD,SAAL,EAAgB;AACfF,QAAAA,IAAI,CAACO,KAAL,CAAWF,OAAX,EAAoBD,IAApB;AACA;AACD,KALD;;AAMA,QAAMI,OAAO,GAAGN,SAAS,IAAI,CAACC,OAA9B;AAEAM,IAAAA,YAAY,CAACN,OAAD,CAAZ;AACAA,IAAAA,OAAO,GAAGO,UAAU,CAACJ,KAAD,EAAQL,IAAR,CAApB;;AACA,QAAIO,OAAJ,EAAa;AACZR,MAAAA,IAAI,CAACO,KAAL,CAAWF,OAAX,EAAoBD,IAApB;AACA;AACD,GAfD;AAgBA","sourcesContent":["/**\n *\n * @author David Walsh\n *\n * @link https://davidwalsh.name/javascript-debounce-function\n *\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n *\n * Rewritten for eslint by absolutholz\n */\nexport function debounce(func, wait, immediate) {\n\tlet timeout;\n\n\treturn (...args) => {\n\t\tconst context = this;\n\t\tconst later = () => {\n\t\t\ttimeout = null;\n\t\t\tif (!immediate) {\n\t\t\t\tfunc.apply(context, args);\n\t\t\t}\n\t\t};\n\t\tconst callNow = immediate && !timeout;\n\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(later, wait);\n\t\tif (callNow) {\n\t\t\tfunc.apply(context, args);\n\t\t}\n\t};\n}\n"],"file":"event-debounce.js"}