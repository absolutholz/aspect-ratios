{"version":3,"sources":["utilities/events/event-debounce.js"],"names":["debounce","func","wait","immediate","timeout","_this","this","_len","arguments","length","args","Array","_key","context","callNow","clearTimeout","setTimeout","apply","Object","defineProperty","exports","value"],"mappings":"AAAA,aAoBA,SAASA,SAASC,EAAMC,EAAMC,GAC5B,IAEIC,EAFAC,EAAQC,KAGZ,OAAO,WACL,IAAK,IAAIC,EAAOC,UAAUC,OAAQC,EAAO,IAAIC,MAAMJ,GAAOK,EAAO,EAAGA,EAAOL,EAAMK,IAC/EF,EAAKE,GAAQJ,UAAUI,GAGzB,IAAIC,EAAUR,EAUVS,EAAUX,IAAcC,EAC5BW,aAAaX,GACbA,EAAUY,WAVE,WACVZ,EAAU,KAELD,GACHF,EAAKgB,MAAMJ,EAASH,IAMIR,GAExBY,GACFb,EAAKgB,MAAMJ,EAASH,IA1C1BQ,OAAOC,eAAeC,QAAS,aAAc,CAC3CC,OAAO,IAETD,QAAQpB,SAAWA","file":"event-debounce.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.debounce = debounce;\n\n/**\n *\n * @author David Walsh\n *\n * @link https://davidwalsh.name/javascript-debounce-function\n *\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n *\n * Rewritten for eslint by absolutholz\n */\nfunction debounce(func, wait, immediate) {\n  var _this = this;\n\n  var timeout;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var context = _this;\n\n    var later = function later() {\n      timeout = null;\n\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n}\n//# sourceMappingURL=event-debounce.js.map\n"]}