{"version":3,"sources":["utilities/observable.js"],"names":["Observable","observers","Object","freeze","publish","payload","forEach","observer","update","subscribe","push","unsubscribe","index","this","indexOf","splice","defineProperty","exports","value"],"mappings":"AAAA,aAaA,SAASA,aACP,IAAIC,EAAY,GA2BhB,OAAOC,OAAOC,OAAO,CACnBC,QAPY,SAA4BC,GACxCJ,EAAUK,QAAQ,SAAUC,GAC1BA,EAASC,OAAOH,MAMlBI,UAjBc,SAAqBF,GACnCN,EAAUS,KAAKH,IAiBfI,YAdgB,SAAwBJ,GACxC,IAAIK,EAAQC,KAAKZ,UAAUa,QAAQP,GACnCM,KAAKZ,UAAUc,OAAOH,EAAO,MA9BjCV,OAAOc,eAAeC,QAAS,aAAc,CAC3CC,OAAO,IAETD,QAAQjB,WAAaA","file":"observable.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Observable = Observable;\n\n/*\n\t# Observer(able) Pattern\n\n\t## Helpful Links\n\t- [Understanding Observables in JavaScript - Part#1: Observer Pattern](http://anasfirdousi.com/understanding-observable-patterns-behind-observables-rxjs-rx.html)\n*/\nfunction Observable() {\n  var observers = [];\n  /*\n  \tObserver object MUST have a public 'update' method which is called\n  \tby the Observable's notify function.\n  \tExample:\n  \t\tObservableObject.addObserver({\n  \t\t\tupdate: (payload) => {\n  \t\t\t\t// handle payload\n  \t\t\t},\n  \t\t});\n  */\n\n  var subscribe = function addObserver(observer) {\n    observers.push(observer);\n  };\n\n  var unsubscribe = function removeObserver(observer) {\n    var index = this.observers.indexOf(observer);\n    this.observers.splice(index, 1);\n  };\n\n  var publish = function notifyAllObservers(payload) {\n    observers.forEach(function (observer) {\n      observer.update(payload);\n    });\n  };\n\n  return Object.freeze({\n    publish: publish,\n    subscribe: subscribe,\n    unsubscribe: unsubscribe\n  });\n}\n//# sourceMappingURL=observable.js.map\n"]}